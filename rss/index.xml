<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Xin's Note]]></title><description><![CDATA[development note]]></description><link>https://xinmeng1.github.io/note</link><image><url>http://whatatimeline.com/covers/fb_profile_cover_13173327520f7.jpg</url><title>Xin&apos;s Note</title><link>https://xinmeng1.github.io/note</link></image><generator>RSS for Node</generator><lastBuildDate>Fri, 23 Dec 2016 16:34:53 GMT</lastBuildDate><atom:link href="https://xinmeng1.github.io/note/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[如何在对象数组中进行查找部分匹配对象]]></title><description><![CDATA[<h1 id="__" class="sect0">问题描述</h1>
<div class="paragraph">
<p>如何在一个对象数组中查找部分字段匹配的对象, 并返回.举个例子.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">//定义一个对象car
class Car {
	name?: string;
    brand?: string;
    serial?: string;
}

//我们有一个已知的car的数组
var cars: Car[]

//现在我们有一辆 car, 我们需要查找, 该car的name是否已经在 该数组中存在? 并找出该数组. (如果存在返回第一个)
//??</code></pre>
</div>
</div>
<h1 id="___2" class="sect0">方案</h1>
<div class="sect1">
<h2 id="___3">解决方法</h2>
<div class="sectionbody">
<div class="paragraph">
<p>使用<code>Array.prototype.find()</code>, [文档参考](<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find" class="bare">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find</a>)</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">var targetCar: Car;
var matchedCar = cars.find((x)=&gt;x.name==targetCar.name);</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="___4">扩展内容</h2>
<div class="sectionbody">
<div class="paragraph">
<p>如果我们是需要比较一个数组呢? <sub>~这时候我们需要为比较函数传递一个新的参数,来标示数组下标</sub>~. 需要使用 thisArg 参数.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-typescript" data-lang="typescript">//var targetCars: Car[] = [];

//for(var i=0, i&lt; targetCars.length; i++){
//	var matchedCar = cars.find((x,i)=&gt;x.name==targetCar[i].name);
}

var targetCars: Car[] = [];

var obj = { i:0 }
obj.i = i

for(var i=0, i&lt; targetCars.length; i++){
	var matchedCar = cars.find(
	(x)=&gt;x.name==targetCar[this.i].name, // 这里的this 就是 obj
	obj);
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="___5">注意</h2>
<div class="sectionbody">
<div class="paragraph">
<p>注意该方法是在 ECMAScript 2015 (6th Edition, ECMA-262) 以后的版本才有, 所以需要注意你的浏览器, 如果浏览器太旧, 需要自己加入Polifill来支持该方法.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">if (!Array.prototype.find) {
  Array.prototype.find = function(predicate) {
    'use strict';
    if (this == null) {
      throw new TypeError('Array.prototype.find called on null or undefined');
    }
    if (typeof predicate !== 'function') {
      throw new TypeError('predicate must be a function');
    }
    var list = Object(this);
    var length = list.length &gt;&gt;&gt; 0;
    var thisArg = arguments[1];
    var value;

    for (var i = 0; i &lt; length; i++) {
      value = list[i];
      if (predicate.call(thisArg, value, i, list)) {
        return value;
      }
    }
    return undefined;
  };
}</code></pre>
</div>
</div>
</div>
</div>
<h1 id="___6" class="sect0">参考</h1>
<div class="literalblock">
<div class="content">
<pre>[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find</pre>
</div>
</div>]]></description><link>https://xinmeng1.github.io/note/2016/12/23/How-to-partially-match-in-object-array.html</link><guid isPermaLink="true">https://xinmeng1.github.io/note/2016/12/23/How-to-partially-match-in-object-array.html</guid><category><![CDATA[Chinese]]></category><category><![CDATA[ Javascript]]></category><dc:creator><![CDATA[Xin Meng]]></dc:creator><pubDate>Fri, 23 Dec 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Demo]]></title><description><![CDATA[<div class="sect1">
<h2 id="_hello">Hello</h2>
<div class="sectionbody">
<div class="paragraph">
<p>This is the first test blog by using Hubpress!</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_thanks">Thanks</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Thanks</p>
</div>
</div>
</div>]]></description><link>https://xinmeng1.github.io/note/2016/12/23/Demo.html</link><guid isPermaLink="true">https://xinmeng1.github.io/note/2016/12/23/Demo.html</guid><category><![CDATA[HubPress]]></category><category><![CDATA[ Blog]]></category><category><![CDATA[ Open Source]]></category><dc:creator><![CDATA[Xin Meng]]></dc:creator><pubDate>Fri, 23 Dec 2016 00:00:00 GMT</pubDate></item></channel></rss>